import path from 'path'
import { writeFile } from 'fs/promises'
const { resolve } = path

const importMapAttributePattern = /<(script)(?:\s+[^>]*?)*?\s+(data-import-map=["']([^"']*)["']|data-import-map=['"]([^'"]*)['"]).*?>(.*?)<\/\1>/gis
const importMapCommentPattern = /<!--(?:\s+[^>]*?)?import-map-start:\s*([^\s]+)\s*-->(.*?)(<!--\s*import-map-end:\s*([^\s]+)\s*-->)/gs
const scriptContentPattern = /(<script(?:\s+[^>]*?)?>)[^<]*(<\/script>)/gis

/*
- html        - s - String of file containing HTML for import-map to be injected into
- importMaps  - o - Map: Import map paths (s) vs import-map JSON content (s) */
const injectDataImportMaps = (html, importMaps) => {
  const matches = html.replace(importMapAttributePattern, (match, p1, p2, p3) => {
    const newContent = `
            ${importMaps.get(p3)}
        `
    return match.replace(scriptContentPattern, `$1${newContent}$2`)
  })

  return matches
}

/*
- html        - s - String of file containing HTML for import-map to be injected into
- importMaps  - o - Map: Import map paths (s) vs import-map JSON content (s) */
const injectImportMapComments = (html, importMaps) => {
  return html.replaceAll(importMapCommentPattern, (_, p1) => {
    return `<!-- *** Generated by Bontia; DO NOT EDIT *** import-map-start: ${p1} -->
            <script type="importmap">
                ${importMaps.get(p1)}
            </script>
            <!-- import-map-end: ${p1} -->
        `
  })
}

/*
- html        - s - String of file containing HTML for import-map to be injected into
- htmlPath    - s
- importMaps  - o - Map: Import map paths (s) vs import-map JSON content (s)
- cliDir      - s - Directory defined by the cli command */
const injectImportMaps = (html, htmlPath, importMaps, cliDir) => {
  const htmlWithDataImportMaps = injectDataImportMaps(html, importMaps)
  const newHTML = injectImportMapComments(htmlWithDataImportMaps, importMaps)

  const injectablePath = resolve(cliDir, htmlPath)

  writeFile(injectablePath, newHTML, (err) => {
    if (err) {
      console.error(err)
      return
    }
    console.log('file written')
  })
}

export { injectImportMaps }
