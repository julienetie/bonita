
// import * as url from 'url'
import path from 'path'
import { writeFile } from 'fs/promises'
const { resolve } = path

const dataImportMapTagsPattern = /<(script)(?:\s+[^>]*?)*?\s+(data-import-map=["']([^"']*)["']|data-import-map=['"]([^'"]*)['"]).*?>(.*?)<\/\1>/gis
const commentInjectionPattern = /<!--(?:\s+[^>]*?)?import-map-start:\s*([^\s]+)\s*-->(.*?)(<!--\s*import-map-end:\s*([^\s]+)\s*-->)/gs
const tagContentPattern = /(<script(?:\s+[^>]*?)?>)[^<]*(<\/script>)/gis

const injectDataImportMaps = (html, importMaps) => {
  const matches = html.replace(dataImportMapTagsPattern, (match, p1, p2, p3) => {
    const newContent = `
            ${importMaps.get(p3)}
        `
    return match.replace(tagContentPattern, `$1${newContent}$2`)
  })

  return matches
}

const injectImportMapComments = (html, importMaps) => {
  return html.replaceAll(commentInjectionPattern, (_, p1) => {
    return `<!-- *** Generated by Bontia; DO NOT EDIT *** import-map-start: ${p1} -->
            <script type="importmap">
                ${importMaps.get(p1)}
            </script>
            <!-- import-map-end: ${p1} -->
        `
  })
}

const injectMaps = (html, htmlPath, importMaps, cliDir) => {
  const htmlWithDataImportMaps = injectDataImportMaps(html, importMaps)
  const newHTML = injectImportMapComments(htmlWithDataImportMaps, importMaps)

  // Write to file using htmlPath
  const injectablePath = resolve(cliDir, htmlPath)

  writeFile(injectablePath, newHTML, (err) => {
    if (err) {
      console.error(err)
      return
    }
    console.log('file written')
  })
}

export { injectMaps }
